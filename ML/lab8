import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.model_selection import train_test_split
from sklearn.tree import DecisionTreeClassifier,plot_tree
from sklearn.metrics import accuracy_score,classification_report,confusion_matrix
from sklearn.tree import export_graphviz
from IPython.display import Image

import pydotplus
import warnings
warnings.filterwarnings('ignore')


data=pd.read_csv('/content/titanic.csv') // data=sns.load_dataset("titanic")
pd.set_option('display.max_columns',None)

data.head()
data.Survived.unique()
data.isnull().sum()

df= data.drop(['Cabin'] ,axis=1)
df['Age'] = df['Age'].fillna(df['Age'].mean())
df

df['Embarked']=df['Embarked'].fillna(df['Embarked'].mode()[0])
df.isnull().sum()
df = df.drop(columns=['PassengerId', 'SibSp', 'Parch', 'Ticket',"Name"])
df.columns

df = pd.get_dummies(df, columns=['Sex', 'Embarked',"Pclass"], drop_first=True)
X = df.drop(columns=['Survived'])
y = df['Survived']
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

dt = DecisionTreeClassifier( random_state=42)
dt.fit(X_train, y_train)
y_pred = dt.predict(X_test)
dot_data = export_graphviz(dt, out_file=None,feature_names=X_train.columns, rounded=True, proportion=False, precision=2, filled=True)
graph = pydotplus.graph_from_dot_data(dot_data)
Image(graph.create_png())
accuracy=accuracy_score(y_test,y_pred)
print(f'accuracy:{accuracy:.2f}')
cm=confusion_matrix(y_test,y_pred)
print(classification_report(y_test,y_pred))
print("\n Classification Report :")
print(classification_report(y_test,y_pred))
